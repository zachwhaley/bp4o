#!/usr/bin/env python
# -*- coding: utf-8 -*-

import re
import sys
import subprocess

class colors:
    OFF     = '\033[0;0m'
    BOLD    = '\033[0;1m'
    BLACK   = '\033[0;30m'
    RED     = '\033[0;31m'
    GREEN   = '\033[0;32m'
    YELLOW  = '\033[0;33m'
    BLUE    = '\033[0;34m'
    MAGENTA = '\033[0;35m'
    CYAN    = '\033[0;36m'
    WHITE   = '\033[0;37m'

def colorsoff():
    colors.OFF     = ''
    colors.BOLD    = ''
    colors.BLACK   = ''
    colors.RED     = ''
    colors.GREEN   = ''
    colors.YELLOW  = ''
    colors.BLUE    = ''
    colors.MAGENTA = ''
    colors.CYAN    = ''
    colors.WHITE   = ''

class p4file():
    mvfrom = ''
    def __init__(self, name):
        self.name = name

# Support python 2.7.6
args = []
for arg in sys.argv:
    args += arg.split()

child = subprocess.Popen(args[1:], stdout=subprocess.PIPE, text=True)
(out, err) = child.communicate()
if child.returncode != 0:
    if out:
        sys.stdout.write(out)
    sys.exit(child.returncode)

# Turn off colors if stdout is being piped or redirected
if not sys.stdout.isatty():
    colorsoff()

opened = {}
for line in out.split('\n'):
    m = re.match(r'(.+) - opened for (.+)', line)
    if m:
        st = m.group(2)
        if st == 'move/delete':
            continue
        elif st == 'move/add':
            st = 'move'
        if st not in opened:
            opened[st] = []
        opened[st].append(p4file(m.group(1)))
    elif line:
        mv = re.match(r'^\.\.\. moved from (.+)', line)
        if mv:
            opened['move'][-1].mvfrom = mv.group(1)
        else:
            print(line)

if opened:
    for stat, files in list(opened.items()):
        print(('\nOpened for {}'.format(stat)))
        color = colors.OFF
        if 'edit' in stat:
            color = colors.YELLOW
        elif 'add' in stat:
            color = colors.GREEN
        elif 'delete' in stat:
            color = colors.RED
        for f in files:
            if f.mvfrom:
                print(('\t{}{}{} -> {}{}{}'.format(colors.RED, f.mvfrom, colors.OFF, colors.GREEN, f.name, colors.OFF)))
            else:
                print(('\t{}{}{}'.format(color, f.name, colors.OFF)))
    print('')

sys.exit(child.returncode)
